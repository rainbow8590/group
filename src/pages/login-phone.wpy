<style lang="less">
  @import '../util/public.less';
  button{
    margin-top: 168rpx;
    line-height: 90rpx;
    background: @baseColor;
    width: 688rpx;
    color: #fff;
    font-size: 34rpx;
  }
  .form-item{
    width: 100%;
    font-size: 34rpx;
    height: 128rpx;
    align-items: center;
    border-bottom: 1px solid #e5e5e5;
    padding:0 20rpx;
    box-sizing:border-box;

    input{
      flex:1
    }
    text{
      border-left: 1px solid #e5e5e5;
      padding-left: 20rpx;
    }
  }

  .toast{
    width: 80%;
    height: 80rpx;
    font-size: 24rpx;
    text-align: center;
    line-height: 80rpx;
    color: #ff3c00;
    border: 1px solid #ff3c00;
    background: rgba(255,60,0,.1);
    border-radius: 20rpx;
    position: absolute;
    top: -80rpx;
    left: 50%;
    margin-left: -40%;
    opacity: 0;
  }
  .animation{
    animation:fadeInDown 1s 0s ease both;
  }
  @keyframes fadeInDown{
    0%{opacity:0; top:-100px}
    100%{opacity:1; top:0}
  }
  
  .animation1{
    animation:fadeOut 1s 0s ease both;
  }
  @keyframes fadeOut{
    0%{opacity:1; top:0}
    100%{opacity:0; top:-100px}
  }

</style>
<template>
  <view class="container">
    <form>
      <view class="form-item flex">
        <input type="number" maxlength="11" placeholder="请输入手机号" placeholder-style="color:#b1b0b0;font-size: 34rpx;" @input="getPhone" @blur="checkPhone" />
        <text @tap.stop="sendCode">{{codeText}}</text>
      </view>
      <view class="form-item flex">
        <input type="number" maxlength="4" placeholder="请输入验证码" placeholder-style="color:#b1b0b0;font-size: 34rpx;" @input="wirteCode" @blur="checkCode" />
      </view>
      <button @tap="login" >登 录</button>
    </form>
    <!-- <view class="toast {{isError ?'animation':''}} {{isHide ?'animation1':''}}" >{{tipText}}</view> -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxRequest from '../util/request'
  
  export default class LoginPhone extends wepy.page {
    config = {
      navigationBarTitleText: '登录',
      // disableScroll: true
    }
    components = {
    }

    mixins = []

    data = {
      isError: false,
      isHide: false,
      codeText:'发送验证码',
      num: 60,
      tipText:'',
      // isDisabledBtn: true,
      RPhone: false,
      RCode: false,
      timera: null
    }
    computed = {}

    // 事件函数
    methods = {
      getPhone(e){
        this.phone = e.detail.value;
      },
      wirteCode(e){
        console.log(e)
        this.code = e.detail.value;
      },
      // 发送验证码
      sendCode(){
        console.log(this.RPhone)
        if(this.RPhone == false) return;
        if(this.num < 60) return;
        // this.checkPhone();
          this.getCode();
          this.num --;
          this.codeText = this.num +'秒后发送';
          clearInterval(this.timera)
          this.timera = setInterval(()=>{
            if(this.num == 0) {
              this.codeText = "重新发送";
              this.num = 60;
              clearInterval(this.timera)
              this.$apply();
              return;
            }else{
              console.log(9999)
              this.num --;
              this.codeText = this.num + '秒后发送';
            }
              this.$apply();
            
          },1000)
        

      },
      // 验证验证码
      checkCode(){
        console.log(this.code)
        let regCode = /^[0-9]{4}$/;
        if(this.code){
          if(!regCode.test( this.code )){
            this.RCode = false;

            // this.tipText = '验证码格式错误'
            // this.errorFun();
            wx.showModal({
              title: '提示',
              content: '验证码格式错误',
              showCancel: false,
              duration: 1000
            })
          }else{
            this.RCode = true;
          }
        }else{
          this.RCode = false
          // this.tipText = '请输入验证码'
          // this.errorFun();
          wx.showModal({
            title: '提示',
            content: '验证码为空',
            showCancel: false,
            duration: 1000
          })
        }
      },
      login(){
        setTimeout(()=>{
          console.log( this.phone , this.RPhone , this.code , this.RCode)
          if(this.phone && !this.RPhone){
            console.log('手机号1')
            wx.showModal({
              title: '提示',
              content: '手机号码格式错误',
              showCancel: false,
              duration: 1000
            })
            return;
          }else if(!this.phone){
            console.log('手机号2')
            wx.showModal({
              title: '提示',
              content: '手机号码为空',
              showCancel: false,
              duration: 1000
            })
            return;
          }
          if(this.code && !this.RCode){
            console.log('验证码1')
            wx.showModal({
              title: '提示',
              content: '验证码错误',
              showCancel: false,
              duration: 1000
            })
          }else if(!this.code){
            console.log('验证码2')
            wx.showModal({
              title: '提示',
              content: '验证码为空',
              showCancel: false,
              duration: 1000
            })
            return;
          }
   
          if(this.RCode && this.RPhone){
            this.loginFun();
          }
        },100)
        
        /* let regCode = /^[0-9]{4}$/;
        if(this.code){
          if(!regCode.test( this.code )){
            this.tipText = '验证码格式错误'
            this.errorFun();
          }else{
            
            // this.$navigate('/pages/group-detail');
          }
        }else{
          this.tipText = '请输入验证码'
          this.errorFun();
        } */
      },
    }
    events = {}
    // 登录
    loginFun(){
      let that = this;
      wxRequest({ method:'post',data:{ phone:this.phone,sms_code:this.code  } },'/bindPhone').then(res => {
        console.log(res)
        wx.setStorageSync('ActicityUser', res.data.data.user)
        if(res.data.code == 1){
          if(that.from == '/pages/order'){
            that.$switch(that.from)
          }else{
            that.$redirect(that.from,{activityId:that.activityId,groupInviterId:that.groupInviterId,from:'login',buyPrice:this.buyPrice})
          }
          // this.$apply();
        }else{
          wx.showModal({
            title: '提示',
            content: res.data.msg,
            showCancel: false,
            duration: 1000
          })
        }
      })
    }
    // 验证手机号
    checkPhone(){
      let regPhone = /^[1][3,4,5,7,8][0-9]{9}$/;
      if(this.phone){
        if(!regPhone.test( this.phone )){
          this.RPhone = false;
          wx.showModal({
            title: '提示',
            content: '手机号码格式不正确',
            showCancel: false,
            duration: 1000
          })
          // this.tipText = '手机号码格式不正确'
          // this.errorFun();
        }else{
         this.RPhone = true
        }
      }else{
        this.RPhone = false;
        // this.tipText = '手机号码不能为空'
        // this.errorFun();
        wx.showModal({
            title: '提示',
            content: '手机号码不能为空',
            showCancel: false,
            duration: 1000
          })
      }
    }
    
    // errorFun(){
    //   this.isError = true;
    //   this.isHide = false;
    //   setTimeout(()=>{
    //     this.isError = false;
    //     this.isHide = true;
    //     this.$apply();
    //   },2000)
    // }
    //获取验证码
    getCode(){
      wxRequest({ method:'post',data:{ phone:this.phone } },'/sendSmsCode').then(res => {
        console.log(res)
        if(res.data.code == 1){
          wx.showModal({
            title: '提示',
            content:'发送成功, 请注意查收短信',
            showCancel: false
          })
        }else{
          wx.showModal({
            title: '提示',
            content: res.data.msg,
            showCancel: false
          })
        }
      })
    }
  

    onLoad(param) {
      this.from = param.from;
      this.activityId = param.activityId;
      this.groupInviterId = param.groupInviterId;
      this.buyPrice = param.buyPrice;
    
      // 查看是否授权过
      // wx.getSetting({
      //   success: (res) => {
      //     console.log(res)
      //     var data = res.authSetting;
      //     if(!data.authSetting){
      //       wx.authorize({
      //           scope: 'scope.userInfo',
      //           success(res) {
      //              console.log(res)
      //           }
      //       })
      //     }
      //   }
      // })
    }
   
    onUnload(){
      console.log('unload')
      clearInterval(this.timera)
      this.num = 60;
    }
  }
</script>
